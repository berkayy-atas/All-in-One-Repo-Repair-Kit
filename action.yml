name: 'MyApp File Security'
author: 'MyApp Inc.'
description: 'Secure repository backup and restoration with military-grade encryption'
branding:
  icon: 'shield'
  color: 'blue'

inputs:
  activation_code:
    description: 'API activation code'
    required: true
  encryption_password:
    description: 'Encryption key (min 32 characters)'
    required: true
  file_version_id:
    description: 'Required for restore operations'
    required: false
    default: ''
  restore_github_token:
    description: 'Optional token for workflow restoration'
    required: false
    default: ''
  otp_request_type:
    description: 'OTP delivery method (MAIL or AUTHENTICATOR)'
    required: false
    default: 'MAIL'

runs:
  using: 'composite'
  steps:

    - name: Set execute permissions
      shell: bash
      run: chmod -R +x ${{ github.action_path }}/scripts

    - name: Validate input
      shell: bash
      run: ${{ github.action_path }}/scripts/common/validate_inputs.sh
      env:
        OTP_REQUEST_TYPE: ${{ inputs.otp_request_type }}

    - name: Set global variables
      shell: bash
      run: ${{ github.action_path }}/scripts/common/set_globals.sh

    - name: Validate encryption password
      shell: bash
      run: ${{ github.action_path }}/scripts/common/validate_password.sh
      env:
        ENCRYPTION_PASSWORD: ${{ inputs.encryption_password }}

    - name: Create mirror clone
      if: ${{ inputs.file_version_id == '' }}
      shell: bash
      run: git clone --mirror . repo-mirror

    - name: Install dependencies
      if: ${{ inputs.file_version_id == '' }}
      shell: bash
      run: ${{ github.action_path }}/scripts/shield/install_deps.sh

    - name: Compress repository
      if: ${{ inputs.file_version_id == '' }}
      shell: bash
      run: ${{ github.action_path }}/scripts/shield/compress_repo.sh
      
    - name: Encrypt repository
      if: ${{ inputs.file_version_id == '' }}
      shell: bash
      run: ${{ github.action_path }}/scripts/shield/encrypt_repo.sh
      env:
        ENCRYPTION_PASSWORD: ${{ inputs.encryption_password }}
        
    - name: Get activation token
      shell: bash
      run: ${{ github.action_path }}/scripts/common/get_token.sh
      env:
        ACTIVATION_CODE: ${{ inputs.activation_code }}

    - name: Upload backup
      if: ${{ inputs.file_version_id == '' }}
      shell: bash
      run: ${{ github.action_path }}/scripts/shield/upload_backup.sh

    - name: Print summary
      if: ${{ inputs.file_version_id == '' }}
      shell: bash
      run: ${{ github.action_path }}/scripts/shield/print_summary.sh

    - name: Request OTP
      if: ${{ inputs.file_version_id != '' }}
      shell: bash
      run: ${{ github.action_path }}/scripts/restore/request_otp.sh
      env:
        OTP_TYPE: ${{ inputs.otp_request_type }}

    - name: Verify OTP
      if: ${{ inputs.file_version_id != '' }}
      shell: bash
      run: ${{ github.action_path }}/scripts/restore/verify_otp.sh

    - name: Retrieve backup
      if: ${{ inputs.file_version_id != '' }}
      shell: bash
      run: ${{ github.action_path }}/scripts/restore/retrieve_backup.sh
      env:
        FILE_VERSION_ID: ${{ inputs.file_version_id }}

    - name: Decrypt backup
      if: ${{ inputs.file_version_id != '' }}
      shell: bash
      run: ${{ github.action_path }}/scripts/restore/decrypt_backup.sh
      env:
        ENCRYPTION_PASSWORD: ${{ inputs.encryption_password }}
        
    - name: Extract backup
      if: ${{ inputs.file_version_id != '' }}
      shell: bash
      run: ${{ github.action_path }}/scripts/restore/extract_backup.sh

    - name: Configure Git and Push
      if: ${{ inputs.file_version_id != '' }}
      shell: bash
      run: |
        cd repo-mirror
       
        if [ -z "${{ inputs.restore_github_token }}" ]; then
          sudo apt install git-filter-repo -y
          git filter-repo --force --path .github/workflows --invert-paths
          TOKEN_TO_USE="${{ github.token }}"
          echo "::warning title=Information About The Scope Of The Restoration ::The restore process was performed by deleting the .github/workflows/ directory from the backup. If you want to restore this directory, follow the steps in the marketplace and repeat the restore process with PAT."
        else
          TOKEN_TO_USE="${{ inputs.restore_github_token }}"
        fi

        ls -la

        git config user.name "myapp File Security"
        git config user.email "file-security@myapp.com"
        git remote add deneme1 "https://x-access-token:${TOKEN_TO_USE}@github.com/${{ github.repository }}.git"


        # Debug: Uzak depo bilgileri
        echo "=== Uzak depo bilgisi ==="
        git remote -v

        # Tüm branch'leri ve tag'leri zorla gönder
        echo "=== Branch'ler gönderiliyor ==="
        git push --force --all deneme1
        echo "=== Tag'ler gönderiliyor ==="
        git push --force --tags deneme1
        
        echo "::notice title=Success!::The repository was successfully restore."
